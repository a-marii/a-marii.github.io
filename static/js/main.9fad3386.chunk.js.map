{"version":3,"sources":["APIHelper.js","App.jsx","reportWebVitals.ts","index.tsx"],"names":["API_URL","task","completed1","completed2","completed3","completed4","a","axios","post","newTodo","data","id","delete","message","payload","put","get","todos","createTodo","deleteTodo","updateTodo","getAllQuestion","App","props","getState","renderArrayTopics","state","list_of_topics","map","topic","className","type","onClick","e","ChooseTopic","target","classname","for","renderArrayResults","show_results","your_answer","true_answer","result","console","log","questions","answer","state_answer","start","finish","rand","Number_Answers","bind","NewQuestion","Compare","Сompare","assistant","getStateForAssistant","createAssistant","on","event","action","dispatchAssistantAction","this","current","sendData","action_id","APIHelper","then","quest","setState","allTopics","item_selector","notes","note","min","max","Math","floor","random","number","i","length","temp","answer1","answer2","answer3","answer4","Result","getRandomArbitrary","ShowResults","DeleteResults","WriteTopic","render","ShowTopics","colspan","WriteQuestions","WriteResults","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"4TAEMA,EAAU,+B,4CAEhB,WAA0BC,EAAMC,EAAWC,EAAWC,EAAWC,GAAjE,iBAAAC,EAAA,sEACkCC,IAAMC,KAAKR,EAAS,CAClDC,OACAC,aACAC,aACAC,aACAC,eANJ,uBACgBI,EADhB,EACUC,KADV,kBAQSD,GART,4C,kEAWA,WAA0BE,GAA1B,eAAAL,EAAA,sEACwBC,IAAMK,OAAN,UAAgBZ,GAAhB,OAA0BW,IADlD,cACQE,EADR,yBAESA,GAFT,4C,kEAKA,WAA0BF,EAAIG,GAA9B,iBAAAR,EAAA,sEACkCC,IAAMQ,IAAN,UAAaf,GAAb,OAAuBW,GAAMG,GAD/D,uBACgBL,EADhB,EACUC,KADV,kBAESD,GAFT,4C,kEAKA,8BAAAH,EAAA,sEACgCC,IAAMS,IAAIhB,GAD1C,uBACgBiB,EADhB,EACUP,KADV,kBAESO,GAFT,4C,sBAKe,OAAEC,W,oDAAYC,W,4CAAYC,W,8CAAYC,e,4CCNxCC,G,MAAb,kDACE,WAAYC,GAAQ,IAAD,EAfQC,EAeR,4BACjB,cAAMD,IAwKRE,kBAAoB,WAClB,OAAO,EAAKC,MAAMC,eAAeC,KAAI,gBAAGjB,EAAH,EAAGA,GAAIkB,EAAP,EAAOA,MAAP,OACpC,qBAAIC,UAAY,SAAhB,UACE,uBAAOA,UAAU,WAAYC,KAAK,WAAYpB,GAAIA,EAAKqB,QAAS,SAAAC,GAAM,EAAKC,YAAYD,EAAEE,OAAOxB,KAAMyB,UAAU,cAChH,wBAAOC,IAAO1B,EAAd,UAAmBA,EAAnB,IAAwBkB,YA7KV,EAiLnBS,mBAAqB,WAEnB,OAAO,EAAKZ,MAAMa,aAAaX,KAAI,YAClC,IADiDC,EAClD,EADkDA,MAAO5B,EACzD,EADyDA,KAAMuC,EAC/D,EAD+DA,YAAaC,EAC5E,EAD4EA,YAAaC,EACzF,EADyFA,OAEvF,MAAc,mCAAXA,EAGD,+BACE,qBAAIZ,UAAY,KAAhB,UAAsBD,EAAtB,OACA,qBAAIC,UAAY,KAAhB,UAAsB7B,EAAtB,OACA,+BAAKuC,EAAL,OACA,+BAAKC,EAAL,OACA,oBAAKX,UAAY,WAAjB,SAA6BY,OAO7B,+BACE,qBAAIZ,UAAY,KAAhB,UAAsBD,EAAtB,OACA,qBAAIC,UAAY,KAAhB,UAAsB7B,EAAtB,OACA,+BAAKuC,EAAL,OACA,+BAAKC,EAAL,OACA,oBAAIX,UAAY,SAAhB,SAA0BY,WAvMlCC,QAAQC,IAAI,eACZ,EAAKlB,MAAQ,CACXmB,UAAU,CAAC,CAAC,IAAO,GAAI,KAAQ,GAAI,QAAW,GAAI,QAAW,GAAI,QAAW,GAAI,QAAW,GAAI,YAAe,KAC9GC,OAAQ,GACRJ,OAAQ,GACRK,aAAc,EACdpB,eAAe,GACfY,aAAc,GACdV,MAAM,CAAClB,GAAG,GAAIkB,MAAO,GAAImB,MAAM,EAAGC,OAAO,GACzCvB,MAAM,EACNwB,KAAM,GAGR,EAAKC,eAAiB,EAAKA,eAAeC,KAApB,gBACtB,EAAKlB,YAAc,EAAKA,YAAYkB,KAAjB,gBACnB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBACnB,EAAKE,QAAU,EAAKC,aAAQH,KAAb,gBACf,EAAKI,WAlCoBhC,EAkCY,kBAAM,EAAKiC,wBAzB3CC,YAAgB,CAAElC,cA0BvB,EAAKgC,UAAUG,GAAG,QAAQ,SAACC,GACzBjB,QAAQC,IAAR,qBAAkCgB,GADU,IAEpCC,EAAWD,EAAXC,OACR,EAAKC,wBAAwBD,MAE/B,EAAKL,UAAUG,GAAG,SAAS,SAACC,GAC1BjB,QAAQC,IAAR,sBAAmCgB,MA1BpB,EADrB,mEA+ByBtD,GAAI,IAAD,EACxBqC,QAAQC,IAAItC,GACZ,UAAAyD,KAAKP,UAAUQ,eAAf,SAAwBC,SAAS,CACjCJ,OAAQ,CACRK,UAAW5D,OAnCf,0CAuCuB,IAAD,OAClBqC,QAAQC,IAAI,qBACZuB,EAAU9C,iBAAiB+C,MAAK,SAAAC,GAC/B,EAAKC,SAAS,CAAEzB,UAAWwB,IAC3B1B,QAAQC,IAAI,YAAY,EAAKlB,MAAMmB,WAClC,EAAK0B,iBA5CX,6CAiDI5B,QAAQC,IAAI,oCAAqCmB,KAAKrC,OACtD,IAAMA,EAAQ,CACZ8C,cAAgBT,KAAKrC,MAAM+C,OAG7B,OADA9B,QAAQC,IAAI,+BAAgCmB,KAAKrC,MAAM+C,OAChD/C,IAtDX,8CAyD2BmC,GAEvB,GADAlB,QAAQC,IAAI,0BAA2BiB,GACnCA,EACF,OAAQA,EAAO9B,MACb,IAAK,WACFgC,KAAKZ,eAAeU,EAAOa,MAC1B,MAEJ,IAAK,WACFX,KAAKV,cACL,MAEH,IAAK,YACHU,KAAK7B,YAAY2B,EAAOa,MACxB,MAEF,IAAK,eACHX,KAAKO,SAAS,CAAC5C,MAAO,IACtB,MAEF,IAAK,eACHqC,KAAKO,SAAS,CAAC5C,MAAO,IACtB,MAEF,IAAK,gBACHqC,KAAKO,SAAS,CAAC/B,aAAc,QAlFvC,yCA2FqBoC,EAAKC,GACtB,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,IAAMA,IA5FzD,kCAmGI,IAHA,IAAIK,EAAO,EACPhC,EAAM,EACNC,EAAO,EACHgC,EAAE,EAAGA,EAAElB,KAAKrC,MAAMmB,UAAUqC,OAAO,EAAED,IACxClB,KAAKrC,MAAMmB,UAAUoC,GAAGpD,QAAQkC,KAAKrC,MAAMmB,UAAUoC,EAAE,GAAGpD,QAC3DoB,EAAOgC,EACPD,IACAjB,KAAKO,SAAS,CAAE3C,eAAe,GAAD,mBAAMoC,KAAKrC,MAAMC,gBAAjB,CAAiC,CAAChB,GAAGqE,EAAQnD,MAAMkC,KAAKrC,MAAMmB,UAAUoC,GAAGpD,MAAOmB,MAAMA,EAAOC,OAAQA,OACrID,EAAMiC,EAAE,GAEPA,IAAIlB,KAAKrC,MAAMmB,UAAUqC,OAAO,IACjCF,IACAjB,KAAKO,SAAS,CAAE3C,eAAe,GAAD,mBAAMoC,KAAKrC,MAAMC,gBAAjB,CAAiC,CAAChB,GAAGqE,EAAQnD,MAAMkC,KAAKrC,MAAMmB,UAAUoC,GAAGpD,MAAOmB,MAAMA,EAAOC,OAAOgC,UA5G5I,kCAiHcD,GAAQ,IAAD,OACbG,EAAKH,EAAO,EAChBjB,KAAKO,SAAS,CACZ5C,MAAM,EACNG,MAAM,CAAClB,GAAIoD,KAAKrC,MAAMC,eAAewD,GAAMtD,MAAOA,MAAOkC,KAAKrC,MAAMC,eAAewD,GAAMtD,MACzFmB,MAAMe,KAAKrC,MAAMC,eAAewD,GAAMnC,MAAOC,OAAOc,KAAKrC,MAAMC,eAAewD,GAAMlC,UACpF,WAAM,EAAKI,mBAvHjB,qCA0HkB8B,GAAQ,IAAD,OACU,IAA5BpB,KAAKrC,MAAMqB,eACF,6BAAPoC,GAAsB,yCAAPA,GAAwB,MAAPA,GAAmB,IAAPA,EAC7CpB,KAAKO,SAAS,CAACxB,OAAOiB,KAAKrC,MAAMmB,UAAUkB,KAAKrC,MAAMwB,MAAMkC,UAAS,kBAAI,EAAK9B,aAEjE,uBAAP6B,GAAqB,yCAAPA,GAAwB,MAAPA,GAAmB,IAAPA,EACjDpB,KAAKO,SAAS,CAACxB,OAAOiB,KAAKrC,MAAMmB,UAAUkB,KAAKrC,MAAMwB,MAAMmC,UAAS,kBAAI,EAAK/B,aAEjE,uBAAP6B,GAAqB,yCAAPA,GAAwB,MAAPA,GAAmB,IAAPA,EACjDpB,KAAKO,SAAS,CAACxB,OAAOiB,KAAKrC,MAAMmB,UAAUkB,KAAKrC,MAAMwB,MAAMoC,UAAS,kBAAI,EAAKhC,aAEjE,yCAAP6B,GAAwB,2DAAPA,GAA2B,MAAPA,GAAmB,IAAPA,GACvDpB,KAAKO,SAAS,CAACxB,OAAOiB,KAAKrC,MAAMmB,UAAUkB,KAAKrC,MAAMwB,MAAMqC,UAAS,kBAAI,EAAKjC,cAEjFS,KAAKO,SAAS,CAACvB,aAAc,MAxIlC,qCA0IY,IAAD,OACJgB,KAAKrC,MAAMoB,SAASiB,KAAKrC,MAAMmB,UAAUkB,KAAKrC,MAAMwB,MAAMT,YAC7DsB,KAAKO,SAAS,CAAC5B,OAAO,mCAAU,WAC9B,EAAK8C,YAEFzB,KAAKO,SAAS,CAAC5B,OAAO,+CAAY,WACrC,EAAK8C,cAhJX,+BAmJIzB,KAAKO,SAAS,CAAE/B,aAAa,GAAD,mBAAMwB,KAAKrC,MAAMa,cAAjB,CAC1B,CAACV,MAAOkC,KAAKrC,MAAMG,MAAMA,MACxB5B,KAAM8D,KAAKrC,MAAMmB,UAAUkB,KAAKrC,MAAMwB,MAAMjD,KAC5CuC,YAAauB,KAAKrC,MAAMoB,OACxBL,YAAasB,KAAKrC,MAAMmB,UAAUkB,KAAKrC,MAAMwB,MAAMT,YACnDC,OAAQqB,KAAKrC,MAAMgB,cAxJ1B,oCA4JI,IAAMiC,EAAIZ,KAAKrC,MAAMG,MAAMmB,MACrB4B,EAAIb,KAAKrC,MAAMG,MAAMoB,OACrB8B,EAAOhB,KAAK0B,mBAAmBd,EAAKC,GAC1Cb,KAAKO,SAAS,CACZvB,aAAc,EACdrB,MAAO,EACPwB,KAAK6B,EACLjC,OAAQ,GACRJ,OAAQ,KAEVC,QAAQC,IAAI,MAAOgC,GACnBjC,QAAQC,IAAI,MAAO+B,KAvKvB,mCAkNe,IAAD,OACV,OACA,sBAAK7C,UAAU,MAAf,UACI,qBAAKA,UAAY,aAAjB,SAA+BiC,KAAKtC,sBACtC,8BACE,qBAAKK,UAAU,WAGjB,4BAAG,wBAAQE,QAAS,kBAAM,EAAK0D,eAAe5D,UAAW,eAAtD,4EACH,4BAAG,wBAAQE,QAAS,kBAAM,EAAK2D,iBAAiB7D,UAAW,gBAAxD,sHA3NT,mCA+NIiC,KAAKO,SAAS,CAAC5C,MAAO,IACtBqC,KAAK6B,eAhOT,oCAoOI7B,KAAKO,SAAS,CAAC5C,MAAO,IACtBqC,KAAK8B,WArOT,sCAyOI9B,KAAKO,SAAS,CAAC/B,aAAc,OAzOjC,uCA4OmB,IAAD,OACd,OACA,sBAAKT,UAAU,MAAf,UACE,sBAAKA,UAAU,UAAf,UACE,sBAAKA,UAAU,YAAf,cAA6BiC,KAAKrC,MAAMmB,UAAUkB,KAAKrC,MAAMwB,MAAMjD,QACnE,4BAAG,yBAAQ+B,QAAS,kBAAM,EAAKmB,eAAe,IAAIrB,UAAY,UAA3D,2DAAiFiC,KAAKrC,MAAMmB,UAAUkB,KAAKrC,MAAMwB,MAAMkC,aAC1H,4BAAG,yBAAQpD,QAAS,kBAAM,EAAKmB,eAAe,IAAIrB,UAAY,UAA3D,2DAAiFiC,KAAKrC,MAAMmB,UAAUkB,KAAKrC,MAAMwB,MAAMmC,aAC1H,4BAAG,yBAAQrD,QAAS,kBAAM,EAAKmB,eAAe,IAAIrB,UAAY,UAA3D,2DAAiFiC,KAAKrC,MAAMmB,UAAUkB,KAAKrC,MAAMwB,MAAMoC,aAC1H,4BAAG,yBAAQtD,QAAS,kBAAM,EAAKmB,eAAe,IAAIrB,UAAY,UAA3D,2DAAiFiC,KAAKrC,MAAMmB,UAAUkB,KAAKrC,MAAMwB,MAAMqC,aAC1H,sBAAKzD,UAAU,SAAf,UACE,qFAAgBiC,KAAKrC,MAAMoB,OAA3B,OACA,2FAAiBiB,KAAKrC,MAAMgB,OAA5B,aAGJ,4BAAG,wBAAQV,QAAS,kBAAM,EAAK8D,cAAchE,UAAW,eAArD,SAAoE,+FACvE,4BAAG,wBAAQE,QAAS,kBAAM,EAAKqB,eAAevB,UAAW,gBAAtD,SAAsE,mIACzE,4BAAG,wBAAQE,QAAS,kBAAM,EAAK0D,eAAe5D,UAAW,eAAtD,4EACH,4BAAG,wBAAQE,QAAS,kBAAM,EAAK2D,iBAAiB7D,UAAW,gBAAxD,sHA7PT,qCAiQiB,IAAD,OACZ,OACA,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,UAAf,SACE,kCACE,kCACE,6BACI,oBAAIiE,QAAQ,IAAZ,4EAEJ,+BACE,0DACA,4EACA,mFACA,qGACA,kFAGJ,kCACE,uBACIhC,KAAKzB,6BAIf,8BACE,qBAAKR,UAAU,WAGjB,4BAAG,wBAAQE,QAAS,kBAAM,EAAK8D,cAAchE,UAAW,eAArD,SAAoE,+FACvE,4BAAG,wBAAQE,QAAS,kBAAM,EAAK2D,iBAAiB7D,UAAW,gBAAxD,sHA7RT,+BAmSI,OADAa,QAAQC,IAAI,UACLmB,KAAKrC,MAAMA,OAChB,KAAK,EACH,OAAOqC,KAAK6B,aACd,KAAK,EACH,OAAO7B,KAAKiC,iBACd,KAAK,EACH,OAAOjC,KAAKkC,oBAzSpB,GAAyBC,IAAMC,YCVhBC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBlC,MAAK,YAAkD,IAA/CmC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASf,OACP,cAAC,IAAMgB,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.9fad3386.chunk.js","sourcesContent":["import axios from \"axios\"\n\nconst API_URL = \"http://localhost:3000/todos/\"\n\nasync function createTodo(task, completed1,completed2,completed3,completed4 ) {\n  const { data: newTodo } = await axios.post(API_URL, {\n    task,\n    completed1,\n    completed2,\n    completed3,\n    completed4\n  })\n  return newTodo\n}\n\nasync function deleteTodo(id) {\n  const message = await axios.delete(`${API_URL}${id}`)\n  return message\n}\n\nasync function updateTodo(id, payload) {\n  const { data: newTodo } = await axios.put(`${API_URL}${id}`, payload)\n  return newTodo\n}\n\nasync function getAllQuestion() {\n  const { data: todos } = await axios.get(API_URL)\n  return todos\n}\n\nexport default { createTodo, deleteTodo, updateTodo, getAllQuestion }","import React from \"react\";\nimport {\n  createSmartappDebugger,\n  createAssistant,\n} from \"@sberdevices/assistant-client\";\nimport APIHelper from \"./APIHelper.js\"\nimport \"./App.css\";\n\n\n\nconst initializeAssistant = (getState/*: any*/) => {\n\n  if (process.env.NODE_ENV === \"development\") {\n    return createSmartappDebugger({\n      token: process.env.REACT_APP_TOKEN ?? \"\",\n      initPhrase: `Запусти ${process.env.REACT_APP_SMARTAPP}`,\n      getState,\n    });\n  }\n  return createAssistant({ getState });\n};\n\n\n\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log('constructor');\n    this.state = {\n      questions:[{\"_id\": \"\", \"task\": \"\", \"answer1\": \"\", \"answer2\": \"\", \"answer3\": \"\", \"answer4\": \"\", \"true_answer\": \"\"},],\n      answer: '',\n      result: '',\n      state_answer: 0,\n      list_of_topics:[],\n      show_results: [],\n      topic:{id:'', topic: '', start:0, finish:0},\n      state:0,\n      rand: 0,\n\n    }    \n    this.Number_Answers = this.Number_Answers.bind(this);\n    this.ChooseTopic = this.ChooseTopic.bind(this);\n    this.NewQuestion = this.NewQuestion.bind(this);\n    this.Compare = this.Сompare.bind(this);\n    this.assistant = initializeAssistant(() => this.getStateForAssistant() );\n    this.assistant.on(\"data\", (event/*: any*/) => {\n      console.log(`assistant.on(data)`, event);\n      const { action } = event\n      this.dispatchAssistantAction(action);\n    });\n    this.assistant.on(\"start\", (event) => {\n      console.log(`assistant.on(start)`, event);\n    });\n\n  }\n  assistant_global_event(a) {\n    console.log(a);\n    this.assistant.current?.sendData({\n    action: {\n    action_id: a\n    }\n    })\n    }\n  componentDidMount() {   \n    console.log('componentDidMount');\n    APIHelper.getAllQuestion().then(quest=>{\n     this.setState({ questions: quest});\n     console.log('questions',this.state.questions)   \n      this.allTopics ()\n    })\n  }\n\n  getStateForAssistant () {\n    console.log('getStateForAssistant: this.state:', this.state)\n    const state = {\n      item_selector:  this.state.notes\n    };\n    console.log('getStateForAssistant: state:', this.state.notes)\n    return state;\n  }\n\n  dispatchAssistantAction (action) {\n    console.log('dispatchAssistantAction', action);\n    if (action) {\n      switch (action.type) {\n        case 'add_note':{\n           this.Number_Answers(action.note);  \n            break;\n         }\n        case 'new_note':{\n           this.NewQuestion()\n           break;\n         }\n        case 'new_topic':{\n          this.ChooseTopic(action.note)\n          break;\n        }\n        case 'show_results':{\n          this.setState({state: 2});\n          break;\n        }\n        case 'return_topic':{\n          this.setState({state: 0});\n          break;\n        }\n        case 'reset_results':{\n          this.setState({show_results: []});\n          break;\n        }\n        default:\n          break;\n      }\n    }\n  }\n\n  getRandomArbitrary(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n  allTopics (){\n    let number=0;\n    let start=0;\n    let finish=0;\n    for(let i=0; i<this.state.questions.length-1;i++ ){\n      if(this.state.questions[i].topic!==this.state.questions[i+1].topic){\n        finish=i;\n        number++;\n        this.setState({ list_of_topics: [...this.state.list_of_topics, {id:number, topic:this.state.questions[i].topic, start:start, finish: finish}] });\n        start=i+1;\n      }\n      if(i===this.state.questions.length-2){\n        number++;\n        this.setState({ list_of_topics: [...this.state.list_of_topics, {id:number, topic:this.state.questions[i].topic, start:start, finish:i}] });\n       }\n    }\n  }\n\n  ChooseTopic(number){\n    let temp=number-1;\n    this.setState({\n      state:1,\n      topic:{id: this.state.list_of_topics[temp].topic, topic: this.state.list_of_topics[temp].topic, \n      start:this.state.list_of_topics[temp].start, finish:this.state.list_of_topics[temp].finish}},\n      ()=>{ this.NewQuestion()})\n  }\n\n  Number_Answers (temp)  {\n    if(this.state.state_answer === 0){\n      if(temp==='один'||temp==='первый'||temp==='1'||temp===1){\n        this.setState({answer:this.state.questions[this.state.rand].answer1},()=>this.Compare());\n      }\n      else if(temp==='два'||temp==='второй'||temp==='2'||temp===2){\n        this.setState({answer:this.state.questions[this.state.rand].answer2},()=>this.Compare());\n      }\n      else if(temp===\"три\"||temp===\"третий\"||temp===\"3\"||temp===3){\n        this.setState({answer:this.state.questions[this.state.rand].answer3},()=>this.Compare());\n      }\n      else if(temp===\"четыре\"||temp===\"четвертый\"||temp===\"4\"||temp===4){\n        this.setState({answer:this.state.questions[this.state.rand].answer4},()=>this.Compare());\n      }\n    }this.setState({state_answer: 1});\n  }\n  Сompare(){\n    if(this.state.answer===this.state.questions[this.state.rand].true_answer)  \n    this.setState({result:\"Верно\"}, ()=>{\n      this.Result();\n    });   \n    else this.setState({result:\"Неверно\"}, ()=>{\n      this.Result()});\n  }\n  Result(){\n    this.setState({ show_results: [...this.state.show_results, \n      {topic: this.state.topic.topic, \n       task: this.state.questions[this.state.rand].task, \n       your_answer: this.state.answer,\n       true_answer: this.state.questions[this.state.rand].true_answer, \n       result: this.state.result}] });\n  }\n\n  NewQuestion(){   \n    const min=this.state.topic.start;\n    const max=this.state.topic.finish;   \n    const random=this.getRandomArbitrary(min, max);\n    this.setState({\n      state_answer: 0,\n      state: 1,\n      rand:random,\n      answer: '',\n      result: ''\n    });\n    console.log('max', max)\n    console.log('min', min)\n  }\n\n  renderArrayTopics = () => {\n    return this.state.list_of_topics.map(({ id, topic}) =>\n     <ul className = \"Topics\">\n       <input className=\"input_no\"  type=\"checkbox\"  id={id}  onClick={e => {this.ChooseTopic(e.target.id)}} classname='input_top'></input>\n       <label for = {id}>{id} {topic}</label>\n    </ul>);\n  }\n\n  renderArrayResults = () => \n  {\n    return this.state.show_results.map(function res({ topic, task, your_answer, true_answer, result})\n    {\n      if(result === \"Верно\")\n      {\n        return(\n        <tr>\n          <td className = \"Td\">{topic} </td>\n          <td className = \"Td\">{task} </td>\n          <td>{your_answer} </td>\n          <td>{true_answer} </td>\n          <td  className = \"td_green\">{result}</td>\n        </tr>\n        );\n      }\n      else\n      {\n        return(\n          <tr>\n            <td className = \"Td\">{topic} </td>\n            <td className = \"Td\">{task} </td>\n            <td>{your_answer} </td>\n            <td>{true_answer} </td>\n            <td className = \"td_red\">{result}</td>\n          </tr>\n        )\n      }\n    })\n  }\n      \n\n  WriteTopic(){\n    return( \n    <div className=\"App\">\n        <div className = \"Topics_div\">{this.renderArrayTopics()}</div>\n      <div>\n        <div className='Text'>\n        </div >\n      </div>\n      <p><button onClick={() => this.ShowResults()} className =\"third_button\">Результаты</button></p>\n      <p><button onClick={() => this.DeleteResults()} className =\"fourth_button\">Сброс результатов</button></p>\n    </div>)\n  }\n  ShowTopics() {\n    this.setState({state: 0});\n    this.WriteTopic();\n  }\n\n  ShowResults() {\n    this.setState({state: 2});\n    this.render();\n  }\n\n  DeleteResults() {\n    this.setState({show_results: []});\n  }\n  \n  WriteQuestions(){\n    return(    \n    <div className=\"App\">\n      <div className=\"Answers\">\n        <div className=\"Questions\"> {this.state.questions[this.state.rand].task}</div>\n        <p><button onClick={() => this.Number_Answers(1)} className = \"but_res\">Вариант 1: {this.state.questions[this.state.rand].answer1}</button></p>\n        <p><button onClick={() => this.Number_Answers(2)} className = \"but_res\">Вариант 2: {this.state.questions[this.state.rand].answer2}</button></p>\n        <p><button onClick={() => this.Number_Answers(3)} className = \"but_res\">Вариант 3: {this.state.questions[this.state.rand].answer3}</button></p>\n        <p><button onClick={() => this.Number_Answers(4)} className = \"but_res\">Вариант 4: {this.state.questions[this.state.rand].answer4}</button></p>\n        <div className=\"Result\">\n          <ul>Ваш Ответ: {this.state.answer} </ul>\n          <ul> Результат: {this.state.result} </ul> \n        </div>\n      </div>\n      <p><button onClick={() => this.ShowTopics()} className =\"first_button\"><span>Список тем</span></button></p>\n      <p><button onClick={() => this.NewQuestion()} className =\"second_button\"><span>Следующий вопрос</span></button></p>\n      <p><button onClick={() => this.ShowResults()} className =\"third_button\">Результаты</button></p>\n      <p><button onClick={() => this.DeleteResults()} className =\"fourth_button\">Сброс результатов</button></p>\n    </div>)\n  }\n  \n  WriteResults(){\n    return(    \n    <div className=\"App\">\n      <div className=\"Results\"> \n        <table /*border=\"1\"  width=\"30%\" height=\"50%\" cellpadding=\"0\" cellspacing=\"0\"*/>\n          <thead>\n            <tr>\n                <th colspan=\"5\">Результаты</th>\n            </tr>\n            <tr>\n              <th>Тема</th>\n              <th>Задание</th>\n              <th>Ваш ответ</th>\n              <th>Верный ответ</th>\n              <th>Вердикт</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr></tr>\n               {this.renderArrayResults()}\n          </tbody>\n        </table>\n      </div>\n      <div>\n        <div className='Text'>\n        </div>\n      </div>\n      <p><button onClick={() => this.ShowTopics()} className =\"third_button\"><span>Список тем</span></button></p>\n      <p><button onClick={() => this.DeleteResults()} className =\"fourth_button\">Сброс результатов</button></p>\n    </div>)\n  }\n\n  render() {\n    console.log('render');\n    switch(this.state.state){\n      case 0:\n        return this.WriteTopic();\n      case 1:\n        return this.WriteQuestions();\n      case 2:\n        return this.WriteResults();\n      default:\n        break;\n    }\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}