{"version":3,"sources":["APIHelper.js","App.jsx","reportWebVitals.ts","index.tsx"],"names":["API_URL","task","completed1","completed2","completed3","completed4","a","axios","post","newTodo","data","id","delete","message","payload","put","get","todos","createTodo","deleteTodo","updateTodo","getAllQuestion","App","props","getState","renderArrayTopics","state","list_of_topics","map","topic","className","type","onClick","e","ChooseTopic","target","classname","for","renderArrayResults","show_results","your_answer","true_answer","result","console","log","questions","answer","state_answer","start","finish","rand","Number_Answers","bind","NewQuestion","Compare","Сompare","assistant","getStateForAssistant","createAssistant","on","event","action","dispatchAssistantAction","APIHelper","then","quest","setState","allTopics","this","item_selector","notes","note","min","max","Math","floor","random","number","i","length","temp","answer1","answer2","answer3","answer4","Result","getRandomArbitrary","ShowResults","WriteTopic","render","ShowTopics","colspan","DeleteResults","WriteQuestions","WriteResults","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.38b59e40.chunk.js","sourcesContent":["import axios from \"axios\"\n\nconst API_URL = \"https://history-quiz-1.herokuapp.com/todos/\"\n\nasync function createTodo(task, completed1,completed2,completed3,completed4 ) {\n  const { data: newTodo } = await axios.post(API_URL, {\n    task,\n    completed1,\n    completed2,\n    completed3,\n    completed4\n  })\n  return newTodo\n}\n\nasync function deleteTodo(id) {\n  const message = await axios.delete(`${API_URL}${id}`)\n  return message\n}\n\nasync function updateTodo(id, payload) {\n  const { data: newTodo } = await axios.put(`${API_URL}${id}`, payload)\n  return newTodo\n}\n\nasync function getAllQuestion() {\n  const { data: todos } = await axios.get(API_URL)\n  return todos\n}\n\nexport default { createTodo, deleteTodo, updateTodo, getAllQuestion }","import React from \"react\";\nimport {\n  createSmartappDebugger,\n  createAssistant,\n} from \"@sberdevices/assistant-client\";\nimport APIHelper from \"./APIHelper.js\"\nimport \"./App.css\";\n\n\n\nconst initializeAssistant = (getState/*: any*/) => {\n\n  if (process.env.NODE_ENV === \"development\") {\n    return createSmartappDebugger({\n      token: process.env.REACT_APP_TOKEN ?? \"\",\n      initPhrase: `Запусти ${process.env.REACT_APP_SMARTAPP}`,\n      getState,\n    });\n  }\n  return createAssistant({ getState });\n};\n\n\n\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log('constructor');\n    this.state = {\n      questions:[{\"_id\": \"\", \"task\": \"\", \"answer1\": \"\", \"answer2\": \"\", \"answer3\": \"\", \"answer4\": \"\", \"true_answer\": \"\"},],\n      answer: '',\n      result: '',\n      state_answer: 0,\n      list_of_topics:[],\n      show_results: [],\n      topic:{id:'', topic: '', start:0, finish:0},\n      state:0,\n      rand: 0,\n\n    }    \n    this.Number_Answers = this.Number_Answers.bind(this);\n    this.ChooseTopic = this.ChooseTopic.bind(this);\n    this.NewQuestion = this.NewQuestion.bind(this);\n    this.Compare = this.Сompare.bind(this);\n    this.assistant = initializeAssistant(() => this.getStateForAssistant() );\n    this.assistant.on(\"data\", (event/*: any*/) => {\n      console.log(`assistant.on(data)`, event);\n      const { action } = event\n      this.dispatchAssistantAction(action);\n    });\n    this.assistant.on(\"start\", (event) => {\n      console.log(`assistant.on(start)`, event);\n    });\n\n  }\n\n  componentDidMount() {   \n    console.log('componentDidMount');\n    APIHelper.getAllQuestion().then(quest=>{\n     this.setState({ questions: quest});\n     console.log('questions',this.state.questions)   \n      this.allTopics ()\n    })\n  }\n\n  getStateForAssistant () {\n    console.log('getStateForAssistant: this.state:', this.state)\n    const state = {\n      item_selector:  this.state.notes\n    };\n    console.log('getStateForAssistant: state:', this.state.notes)\n    return state;\n  }\n\n  dispatchAssistantAction (action) {\n    console.log('dispatchAssistantAction', action);\n    if (action) {\n      switch (action.type) {\n        case 'add_note':{\n           this.Number_Answers(action.note);  \n            break;\n         }\n        case 'new_note':{\n           this.NewQuestion()\n           break;\n         }\n        case 'new_topic':{\n          this.ChooseTopic(action.note)\n          break;\n        }\n        case 'show_results':{\n          this.setState({state: 2});\n          break;\n        }\n        case 'return_topic':{\n          this.setState({state: 0});\n          break;\n        }\n        case 'reset_results':{\n          this.setState({show_results: []});\n          break;\n        }\n        default:\n          break;\n      }\n    }\n  }\n\n  getRandomArbitrary(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n  allTopics (){\n    let number=0;\n    let start=0;\n    let finish=0;\n    for(let i=0; i<this.state.questions.length-1;i++ ){\n      if(this.state.questions[i].topic!==this.state.questions[i+1].topic){\n        finish=i;\n        number++;\n        this.setState({ list_of_topics: [...this.state.list_of_topics, {id:number, topic:this.state.questions[i].topic, start:start, finish: finish}] });\n        start=i+1;\n      }\n      if(i===this.state.questions.length-2){\n        number++;\n        this.setState({ list_of_topics: [...this.state.list_of_topics, {id:number, topic:this.state.questions[i].topic, start:start, finish:i}] });\n       }\n    }\n  }\n\n  ChooseTopic(number){\n    let temp=number-1;\n    this.setState({\n      state:1,\n      topic:{id: this.state.list_of_topics[temp].topic, topic: this.state.list_of_topics[temp].topic, \n      start:this.state.list_of_topics[temp].start, finish:this.state.list_of_topics[temp].finish}},\n      ()=>{ this.NewQuestion()})\n  }\n\n  Number_Answers (temp)  {\n    if(this.state.state_answer === 0){\n      if(temp==='один'||temp==='первый'||temp==='1'||temp===1){\n        this.setState({answer:this.state.questions[this.state.rand].answer1},()=>this.Compare());\n      }\n      else if(temp==='два'||temp==='второй'||temp==='2'||temp===2){\n        this.setState({answer:this.state.questions[this.state.rand].answer2},()=>this.Compare());\n      }\n      else if(temp===\"три\"||temp===\"третий\"||temp===\"3\"||temp===3){\n        this.setState({answer:this.state.questions[this.state.rand].answer3},()=>this.Compare());\n      }\n      else if(temp===\"четыре\"||temp===\"четвертый\"||temp===\"4\"||temp===4){\n        this.setState({answer:this.state.questions[this.state.rand].answer4},()=>this.Compare());\n      }\n    }this.setState({state_answer: 1});\n  }\n  Сompare(){\n    if(this.state.answer===this.state.questions[this.state.rand].true_answer)  \n    this.setState({result:\"Верно\"}, ()=>{\n      this.Result();\n    });   \n    else this.setState({result:\"Неверно\"}, ()=>{\n      this.Result()});\n  }\n  Result(){\n    this.setState({ show_results: [...this.state.show_results, \n      {topic: this.state.topic.topic, \n       task: this.state.questions[this.state.rand].task, \n       your_answer: this.state.answer,\n       true_answer: this.state.questions[this.state.rand].true_answer, \n       result: this.state.result}] });\n  }\n\n  NewQuestion(){   \n    const min=this.state.topic.start;\n    const max=this.state.topic.finish;   \n    const random=this.getRandomArbitrary(min, max);\n    this.setState({\n      state_answer: 0,\n      state: 1,\n      rand:random,\n      answer: '',\n      result: ''\n    });\n    console.log('max', max)\n    console.log('min', min)\n  }\n\n  renderArrayTopics = () => {\n    return this.state.list_of_topics.map(({ id, topic}) =>\n     <ul className = \"Topics\" >\n       <input className=\"input_no\"  type=\"checkbox\"  id={id}  onClick={e => {this.ChooseTopic(e.target.id)}} classname='input_top'></input>\n       <label classname=\"Text\" for = {id}>{id} {topic}</label>\n    </ul>);\n  }\n\n  renderArrayResults = () => \n  {\n    return this.state.show_results.map(function res({ topic, task, your_answer, true_answer, result})\n    {\n      if(result === \"Верно\")\n      {\n        return(\n        <tr>\n          <td className = \"Td\">{topic} </td>\n          <td className = \"Td\">{task} </td>\n          <td>{your_answer} </td>\n          <td>{true_answer} </td>\n          <td  className = \"td_green\">{result}</td>\n        </tr>\n        );\n      }\n      else\n      {\n        return(\n          <tr>\n            <td className = \"Td\">{topic} </td>\n            <td className = \"Td\">{task} </td>\n            <td>{your_answer} </td>\n            <td>{true_answer} </td>\n            <td className = \"td_red\">{result}</td>\n          </tr>\n        )\n      }\n    })\n  }\n      \n\n  WriteTopic(){\n    return( \n    <div className=\"App\">\n        <div className = \"Topics_div\">{this.renderArrayTopics()}</div>\n      <div>\n        <div className='Text'>\n        </div >\n      </div>\n      <p><button onClick={() => this.ShowResults()} className =\"fourth_button\">Результаты</button></p>\n    </div>)\n  }\n  ShowTopics() {\n    this.setState({state: 0});\n    this.WriteTopic();\n  }\n\n  ShowResults() {\n    this.setState({state: 2});\n    this.render();\n  }\n\n  DeleteResults() {\n    this.setState({show_results: []});\n  }\n  \n  WriteQuestions(){\n    return(    \n    <div className=\"App\">\n      <div className=\"Answers\">\n        <div className=\"Questions\"> {this.state.questions[this.state.rand].task}</div>\n        <p><button onClick={() => this.Number_Answers(1)} className = \"but_res\">Вариант 1: {this.state.questions[this.state.rand].answer1}</button></p>\n        <p><button onClick={() => this.Number_Answers(2)} className = \"but_res\">Вариант 2: {this.state.questions[this.state.rand].answer2}</button></p>\n        <p><button onClick={() => this.Number_Answers(3)} className = \"but_res\">Вариант 3: {this.state.questions[this.state.rand].answer3}</button></p>\n        <p><button onClick={() => this.Number_Answers(4)} className = \"but_res\">Вариант 4: {this.state.questions[this.state.rand].answer4}</button></p>\n        <div className=\"Result\">\n          <ul>Ваш Ответ: {this.state.answer} </ul>\n          <ul> Результат: {this.state.result} </ul> \n        </div>\n      </div>\n      <p><button onClick={() => this.ShowTopics()} className =\"second_button\"><span>Список тем</span></button></p>\n      <p><button onClick={() => this.NewQuestion()} className =\"third_button\"><span>Следующий вопрос</span></button></p>\n      <p><button onClick={() => this.ShowResults()} className =\"fourth_button\">Результаты</button></p>\n\n    </div>)\n  }\n  \n  WriteResults(){\n    return(    \n    <div className=\"App\">\n      <div className=\"Results\"> \n        <table /*border=\"1\"  width=\"30%\" height=\"50%\" cellpadding=\"0\" cellspacing=\"0\"*/>\n          <thead>\n            <tr>\n                <th colspan=\"5\">Результаты</th>\n            </tr>\n            <tr>\n              <th>Тема</th>\n              <th>Задание</th>\n              <th>Ваш ответ</th>\n              <th>Верный ответ</th>\n              <th>Вердикт</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr></tr>\n               {this.renderArrayResults()}\n          </tbody>\n        </table>\n      </div>\n      <div>\n        <div className='Text'>\n        </div>\n      </div>\n      <p><button onClick={() => this.ShowTopics()} className =\"third_button\"><span>Список тем</span></button></p>\n      <p><button onClick={() => this.DeleteResults()} className =\"fourth_button\">Сброс результатов</button></p>\n    </div>)\n  }\n\n  render() {\n    console.log('render');\n    switch(this.state.state){\n      case 0:\n        return this.WriteTopic();\n      case 1:\n        return this.WriteQuestions();\n      case 2:\n        return this.WriteResults();\n      default:\n        break;\n    }\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}