{"version":3,"sources":["APIHelper.js","App.jsx","reportWebVitals.ts","index.tsx"],"names":["API_URL","task","completed1","completed2","completed3","completed4","a","axios","post","newTodo","data","id","delete","message","payload","put","get","todos","createTodo","deleteTodo","updateTodo","getAllQuestion","App","props","getState","renderArrayTopics","className","onClick","assistant_param","state","list_of_topics","topic","renderArrayResults","show_results","map","your_answer","true_answer","result","console","log","questions","answer","state_answer","start","finish","rand","Number_Answers","bind","ChooseTopic","NewQuestion","Compare","Ð¡ompare","assistant","getStateForAssistant","createAssistant","on","event","action","dispatchAssistantAction","assistant_global_event","APIHelper","then","quest","setState","allTopics","this","item_selector","notes","type","note","min","max","Math","floor","random","number","i","length","temp","answer1","answer2","answer3","answer4","Result","getRandomArbitrary","sendData","action_id","ShowResults","DeleteResults","ShowTopics","n","parameters","WriteTopic","render","colspan","role","WriteQuestions","WriteResults","WriteLoading","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0dec2210.chunk.js","sourcesContent":["import axios from \"axios\"\n\nconst API_URL = \"https://history-quiz-1.herokuapp.com/todos/\"\n\nasync function createTodo(task, completed1,completed2,completed3,completed4 ) {\n  const { data: newTodo } = await axios.post(API_URL, {\n    task,\n    completed1,\n    completed2,\n    completed3,\n    completed4\n  })\n  return newTodo\n}\n\nasync function deleteTodo(id) {\n  const message = await axios.delete(`${API_URL}${id}`)\n  return message\n}\n\nasync function updateTodo(id, payload) {\n  const { data: newTodo } = await axios.put(`${API_URL}${id}`, payload)\n  return newTodo\n}\n\nasync function getAllQuestion() {\n  const { data: todos } = await axios.get(API_URL)\n  return todos\n}\n\nexport default { createTodo, deleteTodo, updateTodo, getAllQuestion }","import React from \"react\";\nimport {\n  createSmartappDebugger,\n  createAssistant,\n} from \"@sberdevices/assistant-client\";\nimport APIHelper from \"./APIHelper.js\"\nimport \"./App.css\";\n\n\n\nconst initializeAssistant = (getState/*: any*/) => {\n\n  if (process.env.NODE_ENV === \"development\") {\n    return createSmartappDebugger({\n      token: process.env.REACT_APP_TOKEN ?? \"\",\n      initPhrase: `ÐÐ°Ð¿ÑÑÑÐ¸ ${process.env.REACT_APP_SMARTAPP}`,\n      getState,\n    });\n  }\n  return createAssistant({ getState });\n};\n\n\n\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log('constructor');\n    this.state = {\n      questions:[{\"_id\": \"\", \"task\": \"\", \"answer1\": \"\", \"answer2\": \"\", \"answer3\": \"\", \"answer4\": \"\", \"true_answer\": \"\"},],\n      answer: '',\n      result: '',\n      state_answer: 0,\n      list_of_topics:[],\n      show_results: [],\n      topic:{id:'', topic: '', start:0, finish:0},\n      state:4,\n      rand: 0,\n\n    }    \n    this.Number_Answers = this.Number_Answers.bind(this);\n    this.ChooseTopic = this.ChooseTopic.bind(this);\n    this.NewQuestion = this.NewQuestion.bind(this);\n    this.Compare = this.Ð¡ompare.bind(this);\n    this.assistant = initializeAssistant(() => this.getStateForAssistant() );\n    this.assistant.on(\"data\", (event/*: any*/) => {\n      console.log(`assistant.on(data)`, event);\n      const { action } = event\n      this.dispatchAssistantAction(action);\n    });\n    this.assistant.on(\"start\", (event) => {\n      console.log(`assistant.on(start)`, event);\n    });\n    this.assistant_global_event(\"start\");\n  }\n\n  componentDidMount() {   \n    console.log('componentDidMount');\n    APIHelper.getAllQuestion().then(quest=>{\n     this.setState({ questions: quest});\n     console.log('questions',this.state.questions)   \n      this.allTopics ()\n      this.setState({state:0 });\n    })\n  }\n\n  getStateForAssistant () {\n    console.log('getStateForAssistant: this.state:', this.state)\n    const state = {\n      item_selector:  this.state.notes\n    };\n    console.log('getStateForAssistant: state:', this.state.notes)\n    return state;\n  }\n\n  dispatchAssistantAction (action) {\n    console.log('dispatchAssistantAction', action);\n    if (action) {\n      switch (action.type) {\n        case 'add_note':{\n           this.Number_Answers(action.note);  \n            break;\n         }\n        case 'new_note':{\n           this.NewQuestion()\n           break;\n         }\n        case 'new_topic':{\n          this.ChooseTopic(action.note)\n          break;\n        }\n        case 'new_topic_gp':{\n          this.ChooseTopic(action.note)\n          break;\n        }\n        case 'show_results':{\n          this.setState({state: 2});\n          break;\n        }\n        case 'return_topic':{\n          this.setState({state: 0});\n          break;\n        }\n        case 'reset_results':{\n          this.setState({show_results: []});\n          break;\n        }\n        default:\n          break;\n      }\n    }\n  }\n\n  getRandomArbitrary(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n  allTopics (){\n    let number=0;\n    let start=0;\n    let finish=0;\n    for(let i=0; i<this.state.questions.length-1;i++ ){\n      if(this.state.questions[i].topic!==this.state.questions[i+1].topic){\n        finish=i;\n        number++;\n        this.setState({ list_of_topics: [...this.state.list_of_topics, {id:number, topic:this.state.questions[i].topic, start:start, finish: finish}] });\n        start=i+1;\n      }\n      if(i===this.state.questions.length-2){\n        number++;\n        this.setState({ list_of_topics: [...this.state.list_of_topics, {id:number, topic:this.state.questions[i].topic, start:start, finish:i}] });\n       }\n    }\n  }\n\n  ChooseTopic(number){\n    let temp=number-1;\n    this.setState({\n      state:1,\n      topic:{id: this.state.list_of_topics[temp].topic, topic: this.state.list_of_topics[temp].topic, \n      start:this.state.list_of_topics[temp].start, finish:this.state.list_of_topics[temp].finish}},\n      ()=>{ this.NewQuestion()})\n  }\n\n  Number_Answers (temp)  {\n    if(this.state.state_answer === 0){\n      if(temp==='Ð¾Ð´Ð¸Ð½'||temp==='Ð¿ÐµÑÐ²ÑÐ¹'||temp==='1'||temp===1){\n        this.setState({answer:this.state.questions[this.state.rand].answer1},()=>this.Compare());\n      }\n      else if(temp==='Ð´Ð²Ð°'||temp==='Ð²ÑÐ¾ÑÐ¾Ð¹'||temp==='2'||temp===2){\n        this.setState({answer:this.state.questions[this.state.rand].answer2},()=>this.Compare());\n      }\n      else if(temp===\"ÑÑÐ¸\"||temp===\"ÑÑÐµÑÐ¸Ð¹\"||temp===\"3\"||temp===3){\n        this.setState({answer:this.state.questions[this.state.rand].answer3},()=>this.Compare());\n      }\n      else if(temp===\"ÑÐµÑÑÑÐµ\"||temp===\"ÑÐµÑÐ²ÐµÑÑÑÐ¹\"||temp===\"4\"||temp===4){\n        this.setState({answer:this.state.questions[this.state.rand].answer4},()=>this.Compare());\n      }\n    }this.setState({state_answer: 1});\n  }\n  Ð¡ompare(){\n    if(this.state.answer===this.state.questions[this.state.rand].true_answer)  \n    this.setState({result:\"ÐÐµÑÐ½Ð¾\"}, ()=>{\n      this.Result();\n    });   \n    else this.setState({result:\"ÐÐµÐ²ÐµÑÐ½Ð¾\"}, ()=>{\n      this.Result()});\n  }\n  Result(){\n    this.setState({ show_results: [...this.state.show_results, \n      {topic: this.state.topic.topic, \n       task: this.state.questions[this.state.rand].task, \n       your_answer: this.state.answer,\n       true_answer: this.state.questions[this.state.rand].true_answer, \n       result: this.state.result}] });\n  }\n\n  NewQuestion(){   \n    const min=this.state.topic.start;\n    const max=this.state.topic.finish;   \n    const random=this.getRandomArbitrary(min, max);\n    this.setState({\n      state_answer: 0,\n      state: 1,\n      rand:random,\n      answer: '',\n      result: ''\n    });\n    console.log('max', max)\n    console.log('min', min)\n  }\n\n  renderArrayTopics = () => {\n    return( \n     <ul  >\n   \n       <button  className = \"Topics\" onClick={() => this.assistant_param(this.state.list_of_topics[0].id, \"choose_theme\")}>{this.state.list_of_topics[0].id}. {this.state.list_of_topics[0].topic}</button>\n       <button  className = \"Topics\" onClick={() => this.assistant_param(this.state.list_of_topics[1].id, \"choose_theme\")}>{this.state.list_of_topics[1].id}. {this.state.list_of_topics[1].topic}</button>\n       <button  className = \"Topics\" onClick={() => this.assistant_param(this.state.list_of_topics[2].id, \"choose_theme\")}>{this.state.list_of_topics[2].id}. {this.state.list_of_topics[2].topic}</button>\n       <button  className = \"Topics\" onClick={() => this.assistant_param(this.state.list_of_topics[3].id, \"choose_theme\")}>{this.state.list_of_topics[3].id}. {this.state.list_of_topics[3].topic}</button>\n\n    </ul>);\n  }\n\n  renderArrayResults = () => \n  {\n    return this.state.show_results.map(function res({ topic, task, your_answer, true_answer, result})\n    {\n      if(result === \"ÐÐµÑÐ½Ð¾\")\n      {\n        return(\n        <tr>\n          <td className = \"Td\">{topic} </td>\n          <td className = \"Td\">{task} </td>\n          <td>{your_answer} </td>\n          <td>{true_answer} </td>\n          <td  className = \"td_green\">{result}</td>\n        </tr>\n        );\n      }\n      else\n      {\n        return(\n          <tr>\n            <td className = \"Td\">{topic} </td>\n            <td className = \"Td\">{task} </td>\n            <td>{your_answer} </td>\n            <td>{true_answer} </td>\n            <td className = \"td_red\">{result}</td>\n          </tr>\n        )\n      }\n    })\n  }\n      \n  assistant_global_event(a)  {\n    if(this.assistant){\n      console.log(\"assistant_global_event\");\n    }\n    this.assistant.sendData({\n      action: {\n        action_id: a\n      }\n    })\n    if(a === \"show_res\"){\n      this.ShowResults();\n    }\n    else if(a === \"del_res\"){\n      this.DeleteResults();\n    }\n    else if(a === \"list_theme\"){\n      this.ShowTopics();\n    }\n    else {\n      this.NewQuestion();\n    }\n  }\n\n  assistant_param(n, state)  {\n    this.assistant.sendData({\n      action: {\n        action_id: state,\n        parameters: {\n          number: n\n        }\n      }\n    });\n    if(state === \"choose_theme\"){\n      this.ChooseTopic(n);\n    }\n    else{\n      this.Number_Answers(n);\n    }\n  }\n\n  WriteTopic(){\n    return( \n    <div className=\"App\">\n        <div className = \"Topics_div\">{this.renderArrayTopics()}</div>\n      <div>\n        <div className='Text'>\n        </div >\n      </div>\n      <ul className=\"positionButtons\"> <p><button onClick={() =>/* this.WriteResults()*/ this.assistant_global_event(\"show_res\")} className =\"fourth_button\">Ð ÐµÐ·ÑÐ»ÑÑÐ°ÑÑ</button></p></ul>\n    </div>)\n  }\n  ShowTopics() {\n    this.setState({state: 0});\n    this.WriteTopic();\n  }\n\n  ShowResults() {\n    this.setState({state: 2});\n    this.render();\n  }\n\n  DeleteResults() {\n    this.setState({show_results: []});\n  }\n  \n  WriteQuestions(){\n    return(    \n    <div className=\"App\">\n <div className=\"Answers\">\n        <div className=\"Questions\"> {this.state.questions[this.state.rand].task}</div>\n        <p><button onClick={() => this.assistant_param(1, \"answer\")} className = \"but_res\">1: {this.state.questions[this.state.rand].answer1}</button></p>\n        <p><button onClick={() => this.assistant_param(2, \"answer\")} className = \"but_res\">2: {this.state.questions[this.state.rand].answer2}</button></p>\n        <p><button onClick={() => this.assistant_param(3, \"answer\")} className = \"but_res\">3: {this.state.questions[this.state.rand].answer3}</button></p>\n        <p><button onClick={() => this.assistant_param(4, \"answer\")} className = \"but_res\">4: {this.state.questions[this.state.rand].answer4}</button></p>\n        <div className=\"Result\">\n          <ul>ÐÐ°Ñ ÐÑÐ²ÐµÑ: {this.state.answer} </ul>\n          <ul> Ð ÐµÐ·ÑÐ»ÑÑÐ°Ñ: {this.state.result} </ul> \n        </div>\n      </div>\n\n     <ul className=\"positionButtons\"> <p><button onClick={() => this.assistant_global_event(\"list_theme\")} className =\"second_button\"><span>Ð¡Ð¿Ð¸ÑÐ¾Ðº ÑÐµÐ¼</span></button></p>\n      <p><button onClick={() => this.assistant_global_event(\"next_answer\")} className =\"third_button\"><span>Ð¡Ð»ÐµÐ´ÑÑÑÐ¸Ð¹ Ð²Ð¾Ð¿ÑÐ¾Ñ</span></button></p>\n      <p><button onClick={() => this.assistant_global_event(\"show_res\")} className =\"fourth_button\">Ð ÐµÐ·ÑÐ»ÑÑÐ°ÑÑ</button></p></ul>\n    </div>)\n  }\n  \n  WriteResults(){\n    return(    \n    <div className=\"App\">\n      <div className=\"Results\"> \n        <table /*border=\"1\"  width=\"30%\" height=\"50%\" cellpadding=\"0\" cellspacing=\"0\"*/>\n          <thead>\n            <tr>\n                <th className=\"text_rez\" colspan=\"5\">Ð ÐµÐ·ÑÐ»ÑÑÐ°ÑÑ</th>\n            </tr>\n            <tr>\n              <th className=\"text_rez\">Ð¢ÐµÐ¼Ð°</th>\n              <th className=\"text_rez\">ÐÐ°Ð´Ð°Ð½Ð¸Ðµ</th>\n              <th className=\"text_rez\">ÐÐ°Ñ Ð¾ÑÐ²ÐµÑ</th>\n              <th className=\"text_rez\">ÐÐµÑÐ½ÑÐ¹ Ð¾ÑÐ²ÐµÑ</th>\n              <th className=\"text_rez\">ÐÐµÑÐ´Ð¸ÐºÑ</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr></tr>\n               {this.renderArrayResults()}\n          </tbody>\n        </table>\n      </div>\n      <div>\n        <div className='Text'>\n        </div>\n      </div>\n      <ul className=\"positionButtons\"><p><button onClick={() => this.assistant_global_event(\"list_theme\")} className =\"third_button\"><span>Ð¡Ð¿Ð¸ÑÐ¾Ðº ÑÐµÐ¼</span></button></p>\n      <p><button onClick={() => this.assistant_global_event(\"del_res\")} className =\"fourth_button\">Ð¡Ð±ÑÐ¾Ñ ÑÐµÐ·ÑÐ»ÑÑÐ°ÑÐ¾Ð²</button></p></ul>\n    </div>)\n  }\n  WriteLoading(){\n    return(\n      <div className=\"App\"><div className=\"position\"><div className=\"loader\" role=\"status\">\n</div>       </div></div>\n    )\n  }\n  render() {\n    console.log('render');\n    switch(this.state.state){\n      case 0:\n        return this.WriteTopic();\n      case 1:\n        return this.WriteQuestions();\n      case 2:\n        return this.WriteResults();\n      case 4:\n          return this.WriteLoading();\n          \n\n        \n      default:\n        break;\n    \n  }\n  }\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}